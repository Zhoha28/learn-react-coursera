[{"D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\index.js":"1","D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\components\\Header.js":"2","D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\redux\\promotions.js":"3","D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\redux\\forms.js":"4","D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\components\\dishDetails.js":"5","D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\redux\\leaders.js":"6","D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\components\\FooterComponent.js":"7","D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\redux\\dishes.js":"8","D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\redux\\ActionCreators.js":"9","D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\components\\ContactComponent.js":"10","D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\components\\HomeComponent.js":"11","D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\components\\MenuComponent.js":"12","D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\components\\AboutUsComponent.js":"13","D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\redux\\comments.js":"14","D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\redux\\ActionTypes.js":"15","D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\shared\\baseUrl.js":"16","D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\components\\LoadingComponent.js":"17"},{"size":640,"mtime":1610000554475,"results":"18","hashOfConfig":"19"},{"size":4863,"mtime":1610969539549,"results":"20","hashOfConfig":"19"},{"size":644,"mtime":1613370907298,"results":"21","hashOfConfig":"19"},{"size":156,"mtime":1613225202181,"results":"22","hashOfConfig":"19"},{"size":6884,"mtime":1613466812002,"results":"23","hashOfConfig":"19"},{"size":652,"mtime":1613469385715,"results":"24","hashOfConfig":"19"},{"size":2640,"mtime":1610504818788,"results":"25","hashOfConfig":"19"},{"size":972,"mtime":1613219987025,"results":"26","hashOfConfig":"19"},{"size":6712,"mtime":1613470530948,"results":"27","hashOfConfig":"19"},{"size":9489,"mtime":1613470788879,"results":"28","hashOfConfig":"19"},{"size":1914,"mtime":1613470076829,"results":"29","hashOfConfig":"19"},{"size":2204,"mtime":1613371914876,"results":"30","hashOfConfig":"19"},{"size":4377,"mtime":1613470363546,"results":"31","hashOfConfig":"19"},{"size":542,"mtime":1613470585025,"results":"32","hashOfConfig":"19"},{"size":564,"mtime":1613467548843,"results":"33","hashOfConfig":"19"},{"size":93,"mtime":1613369824963,"results":"34","hashOfConfig":"19"},{"size":252,"mtime":1613224848183,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1uoexcs",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\index.js",[],["74","75"],"D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\components\\Header.js",[],"D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\redux\\promotions.js",[],["76","77"],"D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\redux\\forms.js",[],"D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\components\\dishDetails.js",["78","79","80"],"import React, { Component } from \"react\";\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\n\r\nclass CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n  handleSubmit(values) {\r\n    this.toggleModal();\r\n    this.props.postComment(\r\n      this.props.dishId,\r\n      values.rating,\r\n      values.author,\r\n      values.comment\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button outline onClick={this.toggleModal}>\r\n          <span className=\"fa fa-pencil\" /> Submit Comment\r\n        </Button>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={this.handleSubmit}>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"rating\" md={12}>\r\n                  Rating\r\n                </Label>\r\n                <Col md={{ size: 12 }}>\r\n                <Control.select\r\n                    model=\".rating\"\r\n                    name=\"rating\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                    <option>5</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"author\" md={12}>\r\n                  Your Name\r\n                </Label>\r\n                <Col md={12}>\r\n                  <Control.text\r\n                    model=\".author\"\r\n                    id=\"author\"\r\n                    name=\"author\"\r\n                    placeholder=\"Your Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".author\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"comment\" md={12}>\r\n                  Comment\r\n                </Label>\r\n                <Col md={12}>\r\n                  <Control.textarea\r\n                    model=\".comment\"\r\n                    id=\"comment\"\r\n                    name=\"comment\"\r\n                    rows={5}\r\n                    className=\"form-control\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// function RenderDish(props){}\r\nfunction RenderDish({ dish }) {\r\n \r\n  if (dish != null) {\r\n    return (\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n       <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n        <Card>\r\n        <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n          <CardBody>\r\n            <CardTitle> {dish.name} </CardTitle>\r\n            <CardText> {dish.description} </CardText>\r\n          </CardBody>\r\n        </Card>\r\n        </FadeTransform>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\n// function RenderComments(props){}\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n  if (comments != null) {\r\n    return (\r\n    <div className=\"col-12 col-md-5 m-1\">\r\n    <h4>Comments</h4>\r\n    <ul className=\"list-unstyled\">\r\n    <Stagger in>\r\n    {comments.map((comment) => {\r\n        return (\r\n            <Fade in>\r\n            <li key={comment.id}>\r\n            <p>{comment.comment}</p>\r\n            <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n            </li>\r\n            </Fade>\r\n        );\r\n    })}\r\n    </Stagger>\r\n    </ul>\r\n    <CommentForm dishId={dishId} postComment={postComment} />\r\n    </div>\r\n    )\r\n    }\r\n\r\n   \r\n\r\n      \r\n     \r\n   else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n\r\n  if (props.isLoading) {\r\n    return(\r\n      <div className=\"container\">\r\n        <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n      </div>\r\n    )\r\n  }\r\n  else if (props.errorMessage) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">            \r\n                <h4>{props.errorMessage}</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n    else if (props.dish != null) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/menu\">Menu</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>{props.dish.name}</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <RenderDish dish={props.dish} />\r\n\r\n          <RenderComments\r\n            comments={props.comments}\r\n            postComment={props.postComment}\r\n            dishId={props.dish.id}\r\n          />\r\n\r\n       \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <div>\r\n        <h3>NUL</h3>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default DishDetail;\r\n","D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\redux\\leaders.js",[],"D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\components\\FooterComponent.js",[],"D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\redux\\dishes.js",[],"D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\redux\\ActionCreators.js",[],"D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\components\\ContactComponent.js",["81","82","83","84","85","86","87","88"],"import React, { Component } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Label\r\n} from \"reactstrap\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) =>\r\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass ContactUs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // binding the methods\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  //handling after clicking on submit button\r\n  handleSubmit(values) {\r\n    this.props.resetFeedbackForm();\r\n    this.props.postFeedback(\r\n      values.firstname,\r\n      values.lastname,\r\n      values.telnum,\r\n      values.email,\r\n      values.agree,\r\n      values.contactType,\r\n      values.message\r\n    );\r\n  }\r\n \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/home\">Home</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>Contact Us</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12 contactUs\">\r\n            <h3>Location Information</h3>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 offset-sm-1 contactUs\">\r\n            <h5>Our Address</h5>\r\n            <address className=\"contactUs\">\r\n              121, Clear Water Bay Road\r\n              <br />\r\n              Clear Water Bay, Kowloon\r\n              <br />\r\n              HONG KONG\r\n              <br />\r\n              <i className=\"fa fa-phone\"></i>: +852 1234 5678\r\n              <br />\r\n              <i className=\"fa fa-fax\"></i>: +852 8765 4321\r\n              <br />\r\n              <i className=\"fa fa-envelope\"></i>:{\" \"}\r\n              <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n            </address>\r\n          </div>\r\n          <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n            <h5>Map of our Location</h5>\r\n          </div>\r\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n            <div className=\"btn-group\" role=\"group\">\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-primary\"\r\n                href=\"tel:+85212345678\"\r\n              >\r\n                <i className=\"fa fa-phone\"></i> Call\r\n              </a>\r\n              <a href=\"/\" role=\"button\" className=\"btn btn-info\">\r\n                <i className=\"fa fa-skype\"></i> Skype\r\n              </a>\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-success\"\r\n                href=\"mailto:confusion@food.net\"\r\n              >\r\n                <i className=\"fa fa-envelope-o\"></i> Email\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Send us your Feedback</h3>\r\n          </div>\r\n          <div className=\"col-12 col-md-9\">\r\n          <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"firstname\" md={2}>\r\n                  First Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".firstname\"\r\n                    id=\"firstname\"\r\n                    name=\"firstname\"\r\n                    placeholder=\"First Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".firstname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"lastname\" md={2}>\r\n                  Last Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".lastname\"\r\n                    id=\"lastname\"\r\n                    name=\"lastname\"\r\n                    placeholder=\"Last Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".lastname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"telnum\" md={2}>\r\n                  Contact Tel.\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".telnum\"\r\n                    id=\"telnum\"\r\n                    name=\"telnum\"\r\n                    placeholder=\"Tel. Number\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                      isNumber,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".telnum\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 numbers\",\r\n                      maxLength: \"Must be 15 numbers or less\",\r\n                      isNumber: \"Must be a number\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"email\" md={2}>\r\n                  Email\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      validEmail,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".email\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required \",\r\n                      validEmail: \"Invalid Email Address\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 6, offset: 2 }}>\r\n                  <div className=\"form-check\">\r\n                    <Label check>\r\n                      <Control.checkbox\r\n                        model=\".agree\"\r\n                        name=\"agree\"\r\n                        className=\"form-check-input\"\r\n                      />{\" \"}\r\n                      <strong>May we contact you?</strong>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n                <Col md={{ size: 3, offset: 1 }}>\r\n                  <Control.select\r\n                    model=\".contactType\"\r\n                    name=\"contactType\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option>Tel.</option>\r\n                    <option>Email</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"message\" md={2}>\r\n                  Your Feedback\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea\r\n                    model=\".message\"\r\n                    id=\"message\"\r\n                    name=\"message\"\r\n                    rows=\"12\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 10, offset: 2 }}>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Send Feedback\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactUs;\r\n","D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\components\\HomeComponent.js",[],"D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\components\\MenuComponent.js",[],"D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\components\\AboutUsComponent.js",[],"D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\redux\\comments.js",[],"D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\redux\\ActionTypes.js",[],"D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\shared\\baseUrl.js",[],"D:\\zhoha damani\\Coursera\\REACT COURSERA COURSE FILES\\confusion\\src\\components\\LoadingComponent.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"93"},{"ruleId":"91","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":68,"column":17,"nodeType":"97","endLine":72,"endColumn":20},{"ruleId":"95","severity":1,"message":"98","line":86,"column":19,"nodeType":"97","endLine":97,"endColumn":21},{"ruleId":"95","severity":1,"message":"99","line":115,"column":19,"nodeType":"97","endLine":121,"endColumn":21},{"ruleId":"100","severity":1,"message":"101","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":26},{"ruleId":"95","severity":1,"message":"98","line":116,"column":19,"nodeType":"97","endLine":127,"endColumn":21},{"ruleId":"95","severity":1,"message":"98","line":145,"column":19,"nodeType":"97","endLine":156,"endColumn":21},{"ruleId":"95","severity":1,"message":"98","line":174,"column":19,"nodeType":"97","endLine":186,"endColumn":21},{"ruleId":"95","severity":1,"message":"98","line":205,"column":19,"nodeType":"97","endLine":215,"endColumn":21},{"ruleId":"95","severity":1,"message":"104","line":231,"column":23,"nodeType":"97","endLine":235,"endColumn":25},{"ruleId":"95","severity":1,"message":"96","line":241,"column":19,"nodeType":"97","endLine":245,"endColumn":20},{"ruleId":"95","severity":1,"message":"99","line":256,"column":19,"nodeType":"97","endLine":262,"endColumn":21},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],["105"],["106"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]